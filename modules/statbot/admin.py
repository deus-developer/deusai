import functools
import re
from typing import Match, List

from telegram.ext import Dispatcher
from telegram.utils.helpers import mention_html

from config import settings
from core import EventManager, MessageManager, InnerHandler, CommandFilter, InnerUpdate
from decorators import command_handler, permissions
from decorators.permissions import is_admin, is_developer
from decorators.users import get_players
from models import TelegramUser, Player
from modules import BasicModule
from utils.functions import CustomInnerFilters, telegram_user_id_decode


class AdminModule(BasicModule):
    """
    Admin commands
    """
    module_name = 'admin'

    def __init__(self, event_manager: EventManager, message_manager: MessageManager, dispatcher: Dispatcher):
        self.add_inner_handler(
            InnerHandler(
                CommandFilter(command='ban', description='–ó–∞–±–∞–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞'),
                self._ban(True),
                [CustomInnerFilters.from_player, CustomInnerFilters.from_admin_chat_or_private]
            )
        )
        self.add_inner_handler(
            InnerHandler(
                CommandFilter(command='unban', description='–†–∞–∑–±–∞–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞'),
                self._ban(False),
                [CustomInnerFilters.from_player, CustomInnerFilters.from_admin_chat_or_private]
            )
        )
        self.add_inner_handler(
            InnerHandler(
                CommandFilter(command='ban_ls', description='–°–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–Ω–µ–Ω—ã—Ö'),
                self._ban_ls,
                [CustomInnerFilters.from_player, CustomInnerFilters.from_admin_chat_or_private]
            )
        )
        self.add_inner_handler(
            InnerHandler(
                CommandFilter('admin_add'),
                self._admin(True),
                [CustomInnerFilters.from_player, CustomInnerFilters.from_admin_chat_or_private]
            )
        )
        self.add_inner_handler(
            InnerHandler(
                CommandFilter('admin_remove'),
                self._admin(False),
                [CustomInnerFilters.from_player, CustomInnerFilters.from_admin_chat_or_private]
            )
        )
        self.add_inner_handler(
            InnerHandler(
                CommandFilter('admin_ls'),
                self._admin_list,
                [CustomInnerFilters.from_player, CustomInnerFilters.from_admin_chat_or_private]
            )
        )
        self.add_inner_handler(
            InnerHandler(
                CommandFilter(command='crpt', description='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–ø–∏—Å—å'),
                self._crpt,
                [CustomInnerFilters.from_player, CustomInnerFilters.from_admin_chat_or_private]
            )
        )

        super().__init__(event_manager, message_manager, dispatcher)

    @permissions(is_admin)
    @command_handler(
        regexp=re.compile(r'[\s\S]*Ôªø(?P<secret_code>.+)Ôªø[\s\S]*'),
        argument_miss_msg='–ü—Ä–∏—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "/crpt –¢–µ–∫—Å—Ç"'
    )
    def _crpt(self, _: InnerUpdate, match: Match):
        """
        –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –¥–≤–æ–∏—á–Ω–æ–≥–æ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è TelegramUser.user_id –≤ –¥–≤–æ–∏—á–Ω–æ–º –≤–∏–¥–µ
        –í—ã–∑—ã–≤–∞—Ç—å —Å –ª—é–±—ã–º —Ç–µ–∫—Å—Ç–æ–º, –≥–¥–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–∞–∫–æ–π "—à–∏—Ñ—Ä"
        """

        code = match.group('secret_code')
        telegram_user_id = telegram_user_id_decode(code)
        telegram_user = TelegramUser.get_by_user_id(telegram_user_id)
        if telegram_user is None:
            return self.message_manager.send_message(
                chat_id=settings.GOAT_ADMIN_CHAT_ID,
                text='‚ö†–°–ª—É—à–∞–∞–∞–π. –Ø –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–≥—Ä–æ–∫–∞ —Å —Ç–∞–∫–æ–π —é–∑–µ—Ä–∫–æ–π.‚ö†'
            )

        return self.message_manager.send_message(
            chat_id=settings.GOAT_ADMIN_CHAT_ID,
            text=f'‚úÖ–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {telegram_user.mention_html()},\n –µ—Å–ª–∏ –æ–Ω –µ–≥–æ —Å–ª–∏–ª, —Ç–æ —É—Å—Ç—Ä–∞–∏–≤–∞–π –ø–µ–Ω–µ—Ç—Ä–∞—Ü–∏—é üçÜ'
        )

    def _ban(self, is_banned: bool):
        """
        –ë–∞–Ω–∏—Ç/–†–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç –∏–≥—Ä–æ–∫–∞ –ø–æ —é–∑–µ—Ä–∫–µ
        """

        @permissions(is_admin)
        @get_players(include_reply=True, break_if_no_players=True)
        def handler(self, update: InnerUpdate, players: List[Player]):
            chat_id = update.effective_chat_id
            state_text = f'{"–∑–∞" if is_banned else "—Ä–∞–∑"}–±–∞–Ω'
            for player in players:
                user = player.telegram_user
                if user == update.invoker:
                    self.message_manager.send_message(
                        chat_id=chat_id,
                        text=f'‚ö†–¢—ã –Ω–µ –º–æ–∂–µ—à—å {state_text}–∏—Ç—å —Å–∞–º —Å–µ–±—è'
                    )
                    continue

                user.is_banned = is_banned
                user.save()

                if is_banned:
                    player.ban_player()
                else:
                    player.unban_player()

                self.message_manager.send_message(
                    chat_id=chat_id,
                    text=f'*@{user.username}* {state_text}–µ–Ω'
                )

        handler.__doc__ = f'{is_banned and "–ó–∞" or "–†–∞–∑"}–±–∞–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞'
        return functools.partial(handler, self)

    def _admin(self, become_admin: bool):
        """
        –î–∞—ë—Ç/–ó–∞–±–∏—Ä–∞–µ—Ç –ø–æ–ª–Ω–æ–º–æ—á–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —é–∑–µ—Ä–∫–∞–º
        """

        @permissions(is_developer)
        @get_players(include_reply=True, break_if_no_players=True)
        def handler(self, update: InnerUpdate, players: List[Player]):
            state_text = "" if become_admin else "–Ω–µ"
            for player in players:
                user = player.telegram_user
                user.is_admin = become_admin
                user.save()

                self.message_manager.send_message(
                    chat_id=update.effective_chat_id,
                    text=f'‚úÖ*@{user.username}* —Ç–µ–ø–µ—Ä—å {state_text} –∞–¥–º–∏–Ω'
                )

        handler.__doc__ = f'{become_admin and "–ó–∞" or "–†–∞–∑"}–∞–¥–º–∏–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞'
        return functools.partial(handler, self)

    @permissions(is_admin)
    def _admin_list(self, update: InnerUpdate):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        """
        result = [f'<b>–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤</b>:']
        for user in TelegramUser.filter(TelegramUser.is_admin == True):
            if not user.player:
                continue

            if user.player.exists():
                player = user.player.get()
                name = player.nickname
            else:
                name = f'{user.first_name} {user.last_name}'

            result.append(mention_html(user.user_id, name))

        text = '\n'.join(result)
        self.message_manager.send_message(
            chat_id=update.effective_chat_id,
            text=text
        )

    @permissions(is_admin)
    def _ban_ls(self, update: InnerUpdate):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –±–∞–Ω–æ–≤
        """
        result = [f'<b>–°–ø–∏—Å–æ–∫ –±–∞–Ω–æ–≤</b>:']
        for user in TelegramUser.filter(TelegramUser.is_banned == True):
            if not user.player:
                continue

            if user.player.exists():
                player = user.player.get()
                name = player.nickname
            else:
                name = f'{user.first_name} {user.last_name}'

            result.append(mention_html(user.user_id, name))

        text = '\n'.join(result)
        self.message_manager.send_message(
            chat_id=update.effective_chat_id,
            text=text
        )
